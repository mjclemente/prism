Prism.languages.cfscript=Prism.languages.extend("clike",{comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,inside:{annotation:{alias:"punctuation",pattern:/(^|[^.])@[\w\.]+/,greedy:!0}}},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],keyword:[{pattern:/\b(break|catch|component|continue|default|do|else|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|switch|throw|try|var|while|xml)\b(?!\s*\=)/}],operator:[{pattern:/\+\+|--|&&|\|\||=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(\.|:)?|[?:]/},{pattern:/\b(and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/}],type:[{pattern:/\b(any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,alias:"builtin"}]}),Prism.languages.insertBefore("cfscript","comment",{scope:[{pattern:/\b(application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,alias:["global"]}],"function-variable":{pattern:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"}}),delete Prism.languages.cfscript["class-name"];